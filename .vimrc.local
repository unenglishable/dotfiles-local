" parse markdowns
"autocmd BufRead,BufNewFile *.markdown set filetype=markdown
"autocmd BufRead,BufNewFile *.md setlocal filetype=ghmarkdown
augroup markdown
  au!
  au BufNewFile,BufRead *.md,*.markdown setlocal filetype=ghmarkdown
augroup END

" use highlighting
set hlsearch

" add git status line from fugitive
"set statusline=%f\ %{fugitive#statusline()}

" add commenting from tcomment
" nnoremap // gc

" Quicker window movement
nnoremap <C-j> <C-w>j<C-w>_
nnoremap <C-k> <C-w>k<C-w>_
nnoremap <C-h> <C-w>h<C-w>_
nnoremap <C-l> <C-w>l<C-w>_

"Color shit
colorscheme default
highlight ColorColumn ctermbg=8

"Indent shit, probably dont need
let g:indent_guides_auto_colors = 0
autocmd VimEnter,Colorscheme * :hi IndentGuidesOdd  guibg=red  ctermbg=lightgrey
autocmd VimEnter,Colorscheme * :hi IndentGuidesEven guibg=green ctermbg=darkgrey

"folding settings
set foldmethod=indent   "fold based on indent
set foldnestmax=10      "deepest fold is 10 levels
set nofoldenable        "dont fold by default
set foldlevel=1         "this is just what i use

"increase buffer size
set viminfo='20,<1000

"use mac clipboard
set clipboard=unnamed

autocmd BufNewFile,BufReadPost *.md set filetype=markdown
let g:markdown_fenced_languages = ['html', 'python', 'bash=sh', 'elixir', 'node=javascript', 'js=javascript']

" Disable linting in elixir so iex works
" Disable linting in javscript
let g:ale_linters = {
      \  'elixir': [],
      \  'javascript': []
      \}

" Set up html
function! HTMLSET()
  set wm=0
endfunction

autocmd FileType html call HTMLSET()

" Enable syntax highlighting
syntax on

" Enables filetype detection, loads ftplugin, and loads indent
" (Not necessary on nvim and may not be necessary on vim 8.2+)
filetype plugin indent on

" Don't change my cursor! in ctrlp
" autocmd OptionSet guicursor noautocmd set guicursor=
" set guicursor=
" set guicursor+=n:hor20-Cursor/lCursor
" inoremap <c-p> <nop>
map <c-p> <nop>
